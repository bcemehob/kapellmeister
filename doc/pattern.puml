@startuml

class Pattern {
    + string name
    + int <b>tempo</b> [bpm]
    + int <b>duration</b> [measures]
    + Measure <b>measure
    + Instrument[] <b>instruments
}

note right {
<b>Rules:
* tempo > 0d
* duration % Measure::base == 0
}

class Measure {
    + int <b>base
    + int <b>beats
}

note left {
<b>Example:
3 / 4 =>
{ base: 4, beats: 3 }
}

class Instrument {
    + UUID <b>id
    + string <b>name
    + PartPerformance[] <b>partPerformances
    + Part[] <b>parts
}

class Part {
    + UUID <b>id
    + string <b>name
    + int <b>duration</b> [measures]
    + int <b>anacrusis</b> [beats]
    + PartElement[] <b>partElements
}

note left {
    <b>Rules:
    duration <= Pattern::duration
}

class PartPerformance {
    + int <b>start</b> [measures]
    + UUID <b>partId
}

note top {
    <b>Rules:
    start <= (Pattern::duration - (Part::duration + Part::anacrusis))
}

class PartElement {
    + int <b>start</b> [beats]
    + int <b>duration</b> [beats]
    + string <b>text</b>
    + string <b>picture</b> [base64]
}

note top {
    <b>Rules:
    duration <= (Part::duration + Part::anacrusis) - start [measures]
}

Measure "1" -- "1" Pattern
Instrument "1...n" -- "1" Pattern
Part "1...n" -- "1" Instrument
PartElement "1...n" -- "1" Part
PartPerformance "1...n" -- "1" Instrument
PartPerformance::partId ||--o{  Part::id

@enduml
